/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package quanli.ton.ui.manager;

import java.awt.BorderLayout;
import java.util.List;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.labels.StandardPieSectionLabelGenerator;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import quanli.ton.dao.ProductPriceHistoryDAO;
import quanli.ton.dao.impl.ProductPriceHistoryDAOImpl;
import quanli.ton.entity.ProductPriceHistory;

/**
 *
 * @author huynhtrunghieu
 */
public class PriceChart extends javax.swing.JDialog {
    String productId;
    
    public void setProductId(String productId) {
        this.productId = productId;
    }
    /**
     * Creates new form PriceChart
     */
    public PriceChart(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        priceChartPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        priceChartPanel.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(priceChartPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(priceChartPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
       // this.open();
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PriceChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PriceChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PriceChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PriceChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PriceChart dialog = new PriceChart(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel priceChartPanel;
    // End of variables declaration//GEN-END:variables

//    public void open (){       
//        JFreeChart lineChart = ChartFactory.createLineChart(
//         "Biến đọng giá của sản phẩm",
//         "Years","Number of Schools",
//         createDataset(),
//         PlotOrientation.VERTICAL,
//         true,true,false);
//         
//      ChartPanel chartPanel = new ChartPanel( lineChart );
//      chartPanel.setPreferredSize( new java.awt.Dimension( 560 , 367 ) );
//      setContentPane( chartPanel );
//    }
//    
//    private DefaultCategoryDataset createDataset( ) {
//            DefaultCategoryDataset dataset = new DefaultCategoryDataset( );
//            dataset.addValue( 15 , "schools" , "1970" );
//            dataset.addValue( 30 , "schools" , "1980" );
//            dataset.addValue( 60 , "schools" ,  "1990" );
//            dataset.addValue( 120 , "schools" , "2000" );
//            dataset.addValue( 240 , "schools" , "2010" );
//            dataset.addValue( 300 , "schools" , "2014" );
//            return dataset;
//         }
    
    //private void open() {
       // ProductPriceHistoryDAO dao = new ProductPriceHistoryDAOImpl();
       // List<ProductPriceHistory> list = dao.findAllById(productId);
        
       // ChartPanel chartPanel = createLineChartPanel(list);
       // priceChartPanel.removeAll();                   // xoá sạch bên trong
       // priceChartPanel.setLayout(new BorderLayout()); // đảm bảo layout
      //  priceChartPanel.add(chartPanel, BorderLayout.CENTER); // add vào giữa
       // priceChartPanel.revalidate();
      //  priceChartPanel.repaint();
    }

    //private ChartPanel createLineChartPanel(List<ProductPriceHistory> items) {
        //DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        //items.forEach(item -> dataset.setValue(Number.valueOf(item.getImportPrice()),"Giá (VNĐ)", item.getEffectiveDate()));


        //JFreeChart chart = ChartFactory.createPieChart(
              //  "Số lượng bán ra", dataset, true, true, false);

        //PiePlot plot = (PiePlot) chart.getPlot();
        //plot.setLabelGenerator(new StandardPieSectionLabelGenerator("{0}: {1} ({2})"));

        //return new ChartPanel(chart);
   // }

